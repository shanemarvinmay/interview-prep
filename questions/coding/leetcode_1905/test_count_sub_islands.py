from questions.coding.leetcode_1905.count_sub_islands import Solution

import pytest

@pytest.mark.parametrize('grid1, grid2, expected', [
    # ([[1,1,1,0,0],[0,1,1,1,1],[0,0,0,0,0],[1,0,0,0,0],[1,1,0,1,1]], [[1,1,1,0,0],[0,0,1,1,1],[0,1,0,0,0],[1,0,1,1,0],[0,1,0,1,0]], 3),
    # ([[1,0,1,0,1],[1,1,1,1,1],[0,0,0,0,0],[1,1,1,1,1],[1,0,1,0,1]], [[0,0,0,0,0],[1,1,1,1,1],[0,1,0,1,0],[0,1,0,1,0],[1,0,0,0,1]], 2),
    # ([[1,1,1,1,0,0],[1,1,0,1,0,0],[1,0,0,1,1,1],[1,1,1,0,0,1],[1,1,1,1,1,0],[1,0,1,0,1,0],[0,1,1,1,0,1],[1,0,0,0,1,1],[1,0,0,0,1,0],[1,1,1,1,1,0]], [[1,1,1,1,0,1],[0,0,1,0,1,0],[1,1,1,1,1,1],[0,1,1,1,1,1],[1,1,1,0,1,0],[0,1,1,1,1,1],[1,1,0,1,1,1],[1,0,0,1,0,1],[1,1,1,1,1,1],[1,0,0,1,0,0]], 1),
    (
        [
            [1,1,1,1,0,0],
            [1,1,0,1,0,0],
            [1,0,0,1,1,1],
            [1,1,1,0,0,1],
            [1,1,1,1,1,0], # here
            [1,0,1,0,1,0],
            [0,1,1,1,0,1],
            [1,0,0,0,1,1],
            [1,0,0,0,1,0],
            [1,1,1,1,1,0]
        ],
        [
            [1,1,1,1,0,1],
            [0,0,1,0,1,0],
            [1,1,1,1,1,1],
            [0,1,1,1,1,1],
            [1,1,1,0,1,0], # here
            [0,1,1,1,1,1],
            [1,1,0,1,1,1],
            [1,0,0,1,0,1],
            [1,1,1,1,1,1],
            [1,0,0,1,0,0]
        ],
        0
    ),
])
def test_countSubIslands(grid1, grid2, expected):
    sol = Solution()

    got = sol.countSubIslands(grid1, grid2)

    assert got == expected
